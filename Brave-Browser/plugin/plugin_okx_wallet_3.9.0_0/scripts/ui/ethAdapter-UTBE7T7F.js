import{a as _}from"./chunk-UYWKLP6N.js";import"./chunk-EV6SM3OD.js";import{a as R,b as y,c as O}from"./chunk-DDX7JWRV.js";import"./chunk-6UZ6RETP.js";import"./chunk-NKCGHO5F.js";import"./chunk-ETTYI3VF.js";import{a as M,b as H}from"./chunk-P7FJ7NEB.js";import"./chunk-XGXABYQN.js";import"./chunk-KKTPGZSO.js";import"./chunk-ESKOSV75.js";import"./chunk-ZDQ5EBGN.js";import"./chunk-2KEW2T4M.js";import"./chunk-LBYCQPAD.js";import{a as I}from"./chunk-7O3XK67L.js";import"./chunk-EJY3MW2I.js";import"./chunk-3VRAVMMN.js";import"./chunk-YJ45QIWT.js";import"./chunk-WR62TYUO.js";import"./chunk-2G2AXMFT.js";import"./chunk-XGFQCNHX.js";import"./chunk-4JZ3HIS7.js";import"./chunk-JLA5HXVC.js";import{c as P}from"./chunk-I4WIGQLD.js";import"./chunk-JXZFOFB5.js";import"./chunk-LYNLETTP.js";import{a as m}from"./chunk-FQ4XEVKF.js";import"./chunk-VMYDP774.js";import"./chunk-A7LNVEYU.js";import"./chunk-2YWUVAR3.js";import"./chunk-VA2HGDZT.js";import"./chunk-AKPDCNMH.js";import{la as K,o as f}from"./chunk-M54COW6Q.js";import"./chunk-PWWHYQAY.js";import"./chunk-RIJWHGTU.js";import"./chunk-K4MPEKC5.js";import"./chunk-X6USBUO5.js";import"./chunk-XIGC6FD5.js";import"./chunk-CXUPEGDW.js";import"./chunk-PYTKRRY4.js";import"./chunk-363VDWOO.js";import"./chunk-7B5WANGL.js";import"./chunk-4P4FGPYZ.js";import"./chunk-YGNOWOE7.js";import"./chunk-X3U62T3S.js";import"./chunk-VWOQ4BGW.js";import"./chunk-N4GKTC7Y.js";import"./chunk-PATHAEX7.js";import"./chunk-664ZTB7N.js";import"./chunk-2BD64J7Y.js";import"./chunk-RYJHESAH.js";import"./chunk-DOQ5NSSP.js";import"./chunk-VULQOB2N.js";import{f as g,m as S,o as E}from"./chunk-ICCOEXX5.js";S();E();var k=g(R());K();var v=g(_()),o=g(P());var w=k.default.HardwareWebSdk,T=class extends O{async signTransaction(u,e,s){return new Promise((r,n)=>{(async()=>{let{onekeyInfo:i,hdPathMap:a}=u,c;try{c=await this.initOneKey({onekeyInfo:i,onUiCancel(){n(new Error(m))}})}catch(p){return n(this.handleErrors(p))}e=I(e);let d=M(e),h=a[f],{success:l,payload:t}=await w.evmSignTransaction(i?.connectId,c,{path:h,transaction:{...d.toJSON(),to:(0,o.bufferToHex)(d.to).toString(),chainId:e.chainId}});if(y.closeModal(),l){let p=H(d,t);return r(s?p:{rawTxResult:p})}return n(this.handleErrors(t))})()})}async signPersonalMessage(u,e={}){return new Promise((s,r)=>{(async()=>{let{onekeyInfo:n,hdPathMap:i}=u,a;try{a=await this.initOneKey({onekeyInfo:n,onUiCancel(){r(new Error(m))}})}catch(t){return r(this.handleErrors(t))}let{data:c=""}=e||{},d=i[f],{success:h,payload:l}=await w.evmSignMessage(n?.connectId,a,{path:d,messageHex:(0,o.stripHexPrefix)(c)});if(y.closeModal(),h){let{signature:t=""}=l||{};return e.result=(0,o.addHexPrefix)(t),s()}return r(this.handleErrors(l))})()})}async signTypedData(u,e={}){return new Promise((s,r)=>{(async()=>{let{onekeyInfo:n,hdPathMap:i}=u,a;try{a=await this.initOneKey({onekeyInfo:n,onUiCancel(){r(new Error(m))}})}catch(D){return r(this.handleErrors(D))}let c=i[f];if(!(e.version==="V4"))return e.uiSignErrorMessage="OneKey: Only version 4 of typed data signing is supported",y.closeModal(),s();let h=JSON.parse(e.data),{domain_separator_hash:l,message_hash:t}=(0,v.default)(h,!0),{success:p,payload:x}=await w.evmSignTypedData(n?.connectId,a,{path:c,data:h,metamask_v4_compat:!0,domainHash:l,messageHash:t});return y.closeModal(),p?(e.rawSig=(0,o.addHexPrefix)(x?.signature),s()):r(this.handleErrors(x))})()})}},J=new T;export{J as default};

window.inOKXExtension = true;
window.ASSETS_BUILD_TYPE = "publish";

//# sourceMappingURL=ethAdapter-UTBE7T7F.js.map
