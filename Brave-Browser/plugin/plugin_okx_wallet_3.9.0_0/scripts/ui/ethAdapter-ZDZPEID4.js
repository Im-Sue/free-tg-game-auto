import{a as I,b as M}from"./chunk-TYPMXV3F.js";import{a as H}from"./chunk-UYWKLP6N.js";import"./chunk-EV6SM3OD.js";import"./chunk-ETTYI3VF.js";import{a as _}from"./chunk-2SA4TSNA.js";import{a as y,b as S}from"./chunk-P7FJ7NEB.js";import"./chunk-XGXABYQN.js";import"./chunk-KKTPGZSO.js";import"./chunk-ESKOSV75.js";import"./chunk-ZDQ5EBGN.js";import"./chunk-2KEW2T4M.js";import{a as x}from"./chunk-7O3XK67L.js";import{d as g,f as O}from"./chunk-2G2AXMFT.js";import"./chunk-XGFQCNHX.js";import"./chunk-4JZ3HIS7.js";import"./chunk-JLA5HXVC.js";import{c as E}from"./chunk-I4WIGQLD.js";import{a as w}from"./chunk-FQ4XEVKF.js";import"./chunk-A7LNVEYU.js";import"./chunk-2YWUVAR3.js";import"./chunk-VA2HGDZT.js";import"./chunk-AKPDCNMH.js";import{la as D,o as c}from"./chunk-M54COW6Q.js";import"./chunk-PWWHYQAY.js";import{H as T}from"./chunk-RIJWHGTU.js";import{I as P,v as d}from"./chunk-K4MPEKC5.js";import"./chunk-X6USBUO5.js";import"./chunk-XIGC6FD5.js";import"./chunk-CXUPEGDW.js";import"./chunk-PYTKRRY4.js";import"./chunk-363VDWOO.js";import"./chunk-7B5WANGL.js";import"./chunk-4P4FGPYZ.js";import"./chunk-YGNOWOE7.js";import"./chunk-N4GKTC7Y.js";import"./chunk-2BD64J7Y.js";import"./chunk-RYJHESAH.js";import"./chunk-DOQ5NSSP.js";import"./chunk-VULQOB2N.js";import{f,m,o as l}from"./chunk-ICCOEXX5.js";m();l();var e=f(E());var u=f(I());D();O();var v=f(H());P();var h=class extends M{async signTransaction(o,t,a){let p=o.hdPathMap[c];t=x(t);let r=y(t),{payload:n,success:s}=await u.default.ethereumSignTransaction({path:p,transaction:{...r.toJSON(),to:(0,e.bufferToHex)(r.to).toString(),chainId:t.chainId}});if(s){globalThis.platform.focusCurrentWindow();let i=S(r,{...n});return _(i,t.from)?a?i:{rawTxResult:i}:this.throwInvalidPassPhraseTip()}return this.throwTxCancelTip()}async signPersonalMessage(o,t={}){let a=o.hdPathMap[c],{data:p=""}=t||{},{success:r,payload:n}=await u.default.ethereumSignMessage({path:a,message:(0,e.stripHexPrefix)(p),hex:!0});if(r){globalThis.platform.focusCurrentWindow();let{signature:s=""}=n||{};return t.result=(0,e.addHexPrefix)(s),null}return this.throwTxCancelTip()}async signTypedData(o,t={}){let a=o.hdPathMap[c];if(!(t.version==="V4"))return t.uiSignErrorMessage="Trezor: Only version 4 of typed data signing is supported",null;let r=JSON.parse(t.data),{domain_separator_hash:n,message_hash:s}=(0,v.default)(r,!0),{success:i,payload:C}=await u.default.ethereumSignTypedData({path:a,data:r,metamask_v4_compat:!0,domain_separator_hash:n,message_hash:s});return i?(g().focusLastOkPopupWithCache(),t.rawSig=C?.signature,null):this.throwTxCancelTip()}throwInvalidPassPhraseTip(){throw T.error(d("wallet_extension_transaction_toast_trezor")),new Error(w)}},j=new h;export{j as default};

window.inOKXExtension = true;
window.ASSETS_BUILD_TYPE = "publish";

//# sourceMappingURL=ethAdapter-ZDZPEID4.js.map
